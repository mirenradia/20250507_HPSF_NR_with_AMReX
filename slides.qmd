---
title: "Numerical Relativity with AMReX"
subtitle: "AMReX Community Breakout, HPSF Conference 2025"
date: "2025-05-07"
format:
  clean-revealjs:
    embed-resources: true
    transition: slide
    logo: https://events.linuxfoundation.org/wp-content/uploads/2024/12/HPSF_Conference_2025_Logo_Horizontal_Black.svg
    footer-logo-link: "https://events.linuxfoundation.org/hpsf-conference/"
    sc-sb-title: true
    openButton: false
filters:
 - reveal-header

authors:
 - name: Miren Radia
   role: Research Software Engineer
   affiliations:
     - name: University of Cambridge

---
# Introduction {background-color="#40666e"}

## Who are we?



## What is Numerical Relativity (NR)? {.smaller}

:::: {.columns}

::: {.column width="50%"}
* Numerical Relativity is an area of research that uses numerical methods to
  find and investigate solution to Einstein's equation of General
  Relativity (and other modified theories of gravity),

  $$ \underbrace{G_{ab}}_{\text{curvature}} +
    \underbrace{\Lambda g_{ab}}_{\text{cosmological constant}} =
    \underbrace{8\pi T_{ab}}_{\text{energy-momentum tensor}}. $$

* We recast the equations into a set of coupled non-linear hyperbolic PDEs with
  elliptic constraints that we solve for the initial data.

* Common problems include compact object binaries (black holes, neutron stars,
  more exotic objects) but NR is also used to study cosmological problems and
  perform "numerical experiments" for fundamental physics.

* We are often interested in the gravitational waves emitted in a simulation,
  particularly in the astrophysical compact binary case.
:::

::: {.column width="50%"}

:::

::::

## Common methods {.smaller}

:::: {.columns}

::: {.column width="50%"}
* Discretization:
  * **Finite differences**
    * **Cell-centered**
    * **Vertex/node-centered**
  * Finite volume (for fluids)
  * Spectral methods
  * Discontinuous Galerkin (DG) methods
* Finite-difference mesh refinement:
  * **Block-structured AMR**
    * "Moving boxes" for compact object binaries
    * More adaptive for more exotic spacetimes
  * Oct-tree AMR
:::

::: {.column width="50%"}
* Method of lines
  * **Fourth order Runge-Kutta time integration**
  * **Fourth or sixth-order spatial discretization**
* **Kreiss-Oliger dissipation**
* Boundary conditions:
  * **Outgoing radiation (Sommerfeld)**
  * **Symmetric/reflective**
  * **Extrapolating**
  * Multipatch approaches: separate (e.g. spherical) outer grids
:::

::::
## NR codes {.smaller}

There are many NR codes/frameworks including (but by no means limited to):

:::: {.columns}

::: {.column width="30%"}
### Oct-tree AMR
* GRAthena++
* Gmunu
* Dendro-GR
* GRAMSES
:::

::: {.column width="30%"}
### [Pseudo-]spectral/DG codes
* SpEC/SpECTRE
* bamps
* SFINGE

### Other
* SENR/NRPy+
:::

::: {.column width="40%"}
### Block-structured AMR
* Cactus/Einstein Toolkit$^{\dagger}$
  * McLachlan, LazEv, Maya, Lean, Canuda, ...
* BAM
* PAMR/AMRD libraries
* Hahndol/PARAMESH
* HAD
* CosmoGRaPH
* **Simflowny/MHDueT**$^{\dagger}$
* GRChombo/**GRTeclyn**$^{\dagger}$
:::

::::

${\dagger}$ denotes codes/frameworks that are either transitioning to or
developing support for using AMReX.

# GRTeclyn {background-color="#40666e"}

## The GRTeclyn code {.smaller}

:::: {.columns}

::: {.column width="50%"}
* GRTeclyn is an in-development port of GRChombo (previously built on the Chombo
  libraries) to AMReX.
* "Teclyn" is Welsh for "tool".
* Features
  * `Amr` based
  * Cell-centered but finite-difference rather than finite-volume
    * Fourth-order cell-centered interpolator from coarse to fine (`CellQuartic`)
    * Fourth-order interpolation from fine to coarse
  * Fourth-order Runge-Kutta time integration
  * CCZ4 evolution equation (damped constraints violations) with
    the moving puncture gauge condition
  * Currently, just `BinaryBH` example which evolves black-hole binaries.

:::

::: {.column width="50%"}

:::

::::

## Recent development {.smaller}

:::: {.columns}

::: {.column width="50%"}
* Tracking of the black-hole punctures
  * Uses AMReX's particle infrastructure
  * Typically 2 BHs so just 2 puncture particles so maybe overkill
  * Good experience for future particle use
* AMD MI300A hackathon

* Currently working on adding support for matter.
:::

::: {.column width="50%"}

:::

::::

# MHDueT {background-color="#40666e"}

## The MHDueT code

## Recent development

# Future work {background-color="#40666e"}

## Particles

## UKNR CCP Benchmarking

# Any questions? {background-color="#40666e"}